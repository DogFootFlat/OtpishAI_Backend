spring.application.name=${SPRING_APPLICATION_NAME}

# Naver OAuth2 Registration
spring.security.oauth2.client.registration.naver.client-name=${NAVER_CLIENT_NAME}
spring.security.oauth2.client.registration.naver.redirect-uri=${NAVER_REDIRECT_URI}
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.authorization-grant-type=${NAVER_AUTHORIZATION_GRANT_TYPE}
spring.security.oauth2.client.registration.naver.scope=${NAVER_SCOPE}

# Naver OAuth2 Provider
spring.security.oauth2.client.provider.naver.authorization-uri=${NAVER_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.naver.token-uri=${NAVER_TOKEN_URI}
spring.security.oauth2.client.provider.naver.user-info-uri=${NAVER_USER_INFO_URI}
spring.security.oauth2.client.provider.naver.user-name-attribute=${NAVER_USER_NAME_ATTRIBUTE}

# Google OAuth2 Registration
spring.security.oauth2.client.registration.google.client-name=${GOOGLE_CLIENT_NAME}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.authorization-grant-type=${GOOGLE_AUTHORIZATION_GRANT_TYPE}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE}

# Datasource Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}
spring.jpa.generate-ddl=${SPRING_JPA_GENERATE_DDL}
spring.jpa.properties.hibernate.default_schema=${SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT}
spring.jpa.properties.hibernate.use_sql_comments=${SPRING_JPA_PROPERTIES_HIBERNATE_USE_SQL_COMMENTS}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL}
spring.datasource.show-sql=${SPRING_DATASOURCE_SHOW_SQL}

# JWT Secret
spring.jwt.secret=${SPRING_JWT_SECRET}